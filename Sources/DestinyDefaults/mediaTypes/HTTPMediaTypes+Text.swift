
import DestinyBlueprint

extension HTTPMediaType {
    #HTTPFieldContentType(
        category: "text",
        values: [
            "_1dInterleavedParityfec": .init("1d-interleaved-parityfec"),
            "cacheManifest": .init("cache-manifest"),
            "calendar": .init("", fileExtensions: ["ics"]),
            "cql": .init(""),
            "cqlExpression": .init("cql-expression"),
            "cqlIdentifier": .init("cql-identifier"),
            "css": .init(""),
            "csv": .init("", fileExtensions: ["csv"]),
            "csvSchema": .init("csv-schema"),
            "dns": .init(""),
            "encaprtp": .init(""),
            "enriched": .init(""),
            "example": .init(""),
            "fhirpath": .init(""),
            "flexfec": .init(""),
            "fwdred": .init(""),
            "gff3": .init(""),
            "grammarRefList": .init("grammar-ref-list"),
            "hl7v2": .init(""),
            "html": .init("", fileExtensions: ["html"]),
            "javascript": .init("", fileExtensions: ["js"]),
            "jcrCND": .init("jcr-cnd"),
            "markdown": .init("", fileExtensions: ["md", "markdown"]),
            "mizar": .init(""),
            "n3": .init("", fileExtensions: ["n3"]),
            "parameters": .init(""),
            "parityfec": .init(""),
            "plain": .init("", fileExtensions: ["txt"]),
            "provenanceNotation": .init("provenance-notation"),
            "prsFallensteinRST": .init("prs.fallenstein.rst"),
            "prsLinesTag": .init("prs.lines.tag"),
            "prsPropLogic": .init("prs.prop.logic"),
            "prsTexi": .init("prs.texi"),
            "raptorfec": .init(""),
            "red": .init("RED"),
            "rfc822Headers": .init("rfc822-headers"),
            "richtext": .init(""),
            "rtf": .init(""),
            "rtpEncAescm128": .init("rtp-enc-aescm128"),
            "rtploopback": .init(""),
            "rtx": .init(""),
            "sgml": .init("SGML"),
            "shaclc": .init(""),
            "shex": .init(""),
            "spdx": .init(""),
            "strings": .init(""),
            "t140": .init(""),
            "tabSeparatedValues": .init("tab-separated-values"),
            "troff": .init(""),
            "turtle": .init(""),
            "ulpfec": .init(""),
            "uriList": .init("uri-list"),
            "vcard": .init(""),

            "a": .init("vnd.a"),
            "abc": .init("vnd.abc"),
            "asciiArt": .init("vnd.ascii-art"),
            "curl": .init("vnd.curl"),
            "debianCopyright": .init("vnd.debian.copyright"),
            "dmClientScript": .init("vnd.DMClientScript"),
            "dvbSubtitle": .init("vnd.dvb.subtitle"),
            "esmertecThemeDescriptor": .init("vnd.esmertec.theme-descriptor"),
            "exchangeable": .init("vnd.exchangeable"),
            "familySearchGedcom": .init("vnd.familysearch.gedcom"),
            "ficlabFLT": .init("vnd.ficlab.flt"),
            "fmiFlexstor": .init("vnd.fmi.flexstor"),
            "gml": .init("vnd.gml"),
            "graphviz": .init("vnd.graphviz"),
            "hans": .init("vnd.hans"),
            "hgl": .init("vnd.hgl"),
            "in3d3dml": .init("vnd.in3d.3dml"),
            "in3dSpot": .init("vnd.in3d.spot"),
            "iptcNewsML": .init("vnd.IPTC.NewsML"),
            "iptcNITF": .init("vnd.IPTC.NITF"),
            "latexZ": .init("vnd.latex-z"),
            "motorolaReflex": .init("vnd.motorola.reflex"),
            "msMediapackage": .init("vnd.ms-mediapackage"),
            "net2phoneCommCenterCommand": .init("vnd.net2phone.commcenter.command"),
            "radisysMsmlBasicLayout": .init("vnd.radisys.msml-basic-layout"),
            "senxWarpscript": .init("vnd.senx.warpscript"),
            "sunJ2meAppDescriptor": .init("vnd.sun.j2me.app-descriptor"),
            "sosi": .init("vnd.sosi"),
            "trolltechLinguist": .init("vnd.trolltech.linguist"),
            "vcf": .init("vnd.vcf"),
            "wapSi": .init("vnd.wap.si"),
            "wapSl": .init("vnd.wap.sl"),
            "wapWmlscript": .init("vnd.wap.wmlscript"),
            "zooKCL": .init("vnd.zoo.kcl"),
            "vtt": .init(""),
            "wgsl": .init(""),
            "xml": .init("", fileExtensions: ["xml"]),
            "xmlExternalParsedEntity": .init("xml-external-parsed-entity")
        ]
    )
}